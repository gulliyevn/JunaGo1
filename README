Структура проекта JunaGO
Корневая структура
JunaGO/
├── public/
│   ├── index.html
│   ├── manifest.json
│   └── favicon.ico
│
├── src/
│   ├── index.js                    # Точка входа приложения
│   ├── App.js                      # Главный компонент с роутингом
│   │
│   ├── assets/                     # Статические ресурсы
│   │   ├── logowhite1.png         # Белый логотип
│   │   ├── logonew.png            # Основной логотип
│   │   ├── logomaindark.png       # Темный логотип
│   │   ├── logomainwhite.svg      # Белый SVG логотип
│   │   ├── 1.png                  # Изображения для слайдера
│   │   ├── 2.png
│   │   ├── 3.png
│   │   └── 4.png
│   │
│   ├── contexts/                   # React контексты
│   │   └── AuthContext.js         # Контекст авторизации
│   │
│   ├── components/                 # Переиспользуемые компоненты
│   │   ├── Dashboard/             # Компоненты дашборда
│   │   │   ├── CourseProgressCard.js
│   │   │   ├── UpcomingLessonsCard.js
│   │   │   ├── AchievementsCard.js
│   │   │   ├── LearningPathCard.js
│   │   │   └── CareerPathSelector.js
│   │   │
│   │   ├── Header/
│   │   │   └── Header.js
│   │   ├── Hero/
│   │   │   └── Hero.js
│   │   ├── ImageSlider/
│   │   │   └── ImageSlider.js
│   │   ├── Features/
│   │   │   └── Features.js
│   │   ├── SalaryCalculator/
│   │   │   └── SalaryCalculator.js
│   │   ├── Pricing/
│   │   │   └── Pricing.js
│   │   ├── Testimonials/
│   │   │   └── Testimonials.js
│   │   ├── Footer/
│   │   │   └── Footer.js
│   │   │
│   │   ├── Courses/               # Компоненты курсов
│   │   │   ├── FeaturedCourses.js
│   │   │   ├── CourseCard.js
│   │   │   ├── CourseContent.js
│   │   │   ├── CourseHeader.js
│   │   │   ├── CourseMaterials.js
│   │   │   ├── CourseProgressBar.js
│   │   │   ├── CourseTabs.js
│   │   │   └── CodeEditor.js
│   │   │
│   │   └── common/                # Общие компоненты
│   │       ├── ProtectedRoute.js  # Защищенные роуты
│   │       ├── Chat.js
│   │       ├── Chatbot.js
│   │       ├── ContactForm.js
│   │       ├── DarkModeToggle.js
│   │       ├── LanguageSelector.js
│   │       └── Testimonials.js
│   │
│   ├── pages/                     # Страницы приложения
│   │   ├── Courses.js            # Страница всех курсов
│   │   ├── CourseDetail.js       # Страница конкретного курса
│   │   ├── StudentDashboard.js   # Дашборд студента
│   │   ├── Login.js              # Страница входа
│   │   ├── Signup.js             # Страница регистрации
│   │   ├── ForgotPassword.js     # Восстановление пароля
│   │   ├── ResetPassword.js      # Сброс пароля
│   │   └── UpgradePlan.js        # Страница планов подписки
│   │
│   ├── styles/                   # CSS стили
│   │   ├── variables.css         # CSS переменные для тем
│   │   ├── global.css           # Глобальные стили
│   │   ├── Header.css
│   │   ├── Hero.css
│   │   ├── Features.css
│   │   ├── Footer.css
│   │   ├── ImageSlider.css
│   │   ├── Pricing.css
│   │   ├── SalaryCalculator.css
│   │   ├── Testimonials.css
│   │   ├── Courses.css
│   │   ├── CourseDetail.css
│   │   ├── StudentDashboard.css
│   │   ├── Login.css            # Стили входа
│   │   ├── Signup.css           # Стили регистрации
│   │   ├── ForgotPassword.css   # Стили восстановления пароля
│   │   ├── ResetPassword.css    # Стили сброса пароля
│   │   ├── UpgradePlan.css      # Стили планов подписки
│   │   │
│   │   ├── components/          # Стили компонентов
│   │   │   ├── Chatbot.css
│   │   │   ├── CodeEditor.css
│   │   │   ├── CourseCard.css
│   │   │   ├── CourseContent.css
│   │   │   ├── CourseHeader.css
│   │   │   ├── CourseMaterials.css
│   │   │   ├── CourseProgressBar.css
│   │   │   ├── CourseTabs.css
│   │   │   ├── FeaturedCourses.css
│   │   │   └── LanguageSelector.css
│   │   │
│   │   └── Dashboard/           # Стили дашборда
│   │       ├── CourseProgressCard.css
│   │       ├── UpcomingLessonsCard.css
│   │       ├── AchievementsCard.css
│   │       ├── LearningPathCard.css
│   │       └── CareerPathSelector.css
│   │
│   └── utils/                   # Утилиты и вспомогательные функции
│       ├── themeContext.js      # Контекст темной/светлой темы
│       └── coursesData.js       # Данные курсов (mock data)
│
└── package.json                # Зависимости и скрипты
Архитектура проекта
🎯 Основные особенности
React Router - для навигации между страницами
AuthContext - система аутентификации и авторизации
ProtectedRoute - защита страниц от неавторизованного доступа
Context API - для управления состоянием (тема, авторизация)
Responsive Design - адаптивность под различные устройства
Component-based Architecture - модульная структура
CSS Variables - для поддержки тем
🔐 Система безопасности
AuthContext - управление состоянием авторизации
ProtectedRoute - компонент для защиты роутов
Уровни доступа - free/premium/admin
JWT токены - для аутентификации пользователей
🧩 Компоненты
Layout Components: Header, Footer, Hero
Feature Components: Features, Pricing, Testimonials
Course Components: CourseCard, CourseDetail, CodeEditor
Dashboard Components: StudentDashboard, CourseProgress, Achievements
Auth Components: Login, Signup, ForgotPassword, ResetPassword
Interactive Components: Chatbot, SalaryCalculator, ImageSlider
Common Components: LanguageSelector, DarkModeToggle, ProtectedRoute
📱 Страницы
Public Pages:
Home (/) - главная страница
Courses (/courses) - каталог курсов (preview)
Login (/login) - вход в систему
Signup (/signup) - регистрация
ForgotPassword (/forgot-password) - восстановление пароля
ResetPassword (/reset-password) - сброс пароля
Protected Pages:
StudentDashboard (/dashboard) - личный кабинет студента
CourseDetail (/courses/:id) - детальная страница курса
UpgradePlan (/upgrade) - планы подписки
🎨 Стилизация
CSS Variables - для поддержки светлой/темной темы
Модульные стили - каждый компонент имеет свой CSS файл
Responsive Design - использование media queries
Global Styles - общие стили в global.css
Component Styles - организованы по папкам
🛠 Утилиты
themeContext.js - управление темами через Context API
coursesData.js - моковые данные курсов
AuthContext.js - управление аутентификацией
🔧 Технологии
React 18+
React Router v6
React Context API
CodeMirror (для редактора кода)
Font Awesome (иконки)
CSS3 (переменные, Grid, Flexbox)
🚀 Flow приложения
Публичный доступ → Главная, каталог курсов (preview), аутентификация
Аутентификация → Login/Signup → проверка токена
Авторизованный доступ → Dashboard → полный функционал
Премиум доступ → дополнительные возможности
Эта структура обеспечивает хорошую организацию кода, безопасность, легкость поддержки и масштабируемость проекта.

          //пушить на гитхаб
          cd /JunaGo
          git add .
          git commit -m "my commit"
          git push


          //откат к предыдущей версии
          git reset --hard //уточни у клода

          //подтянуть изменинения с гитхаба
           git pull